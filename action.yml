name: Setup CI/CD
description: Common CI/CD setup for The Westervelt Company
inputs:
  python-version:
    description: The version of Python to setup
    required: true
    default: "3.11"
  python-requirements:
    description: A comma-deliniated list of requirements*.txt files for use with pip
    required: true
  node-version:
    description: The version of Node.js to setup
    required: false
runs:
  using: composite
  steps:
    - uses: actions/checkout@v4
      with:
        persist-credentials: false

    - name: Prepare Python requirements
      id: prepare-python-requirements
      env:
        REQUIREMENTS: ${{ inputs.python-requirements }}
      shell: bash
      run: |
        IFS=',' read -ra REQ_FILES <<< "$REQUIREMENTS"
        for req_file in "${REQ_FILES[@]}"; do
          echo "$req_file"
        done > req_files_list.txt
        echo "files_list=$(<req_files_list.txt)" >> $GITHUB_OUTPUT

    - uses: actions/setup-python@v5
      with:
        python-version: ${{ inputs.python-version }}

    - name: Get pip cache dir
      id: pip-cache
      shell: bash
      run: |
        echo "dir=$(pip cache dir)" >> $GITHUB_OUTPUT

    - name: Generate Python requirements hash
      id: python-requirements-hash
      shell: bash
      run: |
        while read req_file; do
          cat $req_file >> combined_requirements.txt
        done <<< "${{ steps.prepare-python-requirements.outputs.files_list }}"
        echo "hash=$(sha256sum combined_requirements.txt | awk '{print $1}')" >> $GITHUB_OUTPUT

    - uses: actions/cache@v4
      with:
        path: ${{ steps.pip-cache.outputs.dir }}
        key: ${{ runner.os }}-pip-${{ steps.python-requirements-hash.outputs.hash }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - uses: actions/setup-node@v4
      if: ${{ inputs.node-version }}
      with:
        node-version: ${{ inputs.node-version }}

    - name: Get npm cache dir
      if: ${{ inputs.node-version }}
      id: npm-cache
      shell: bash
      run: |
        echo "dir=$(npm config get cache)" >> $GITHUB_OUTPUT

    - uses: actions/cache@v4
      if: ${{ inputs.node-version }}
      with:
        path: ${{ steps.npm-cache.outputs.dir }}
        key: ${{ runner.os }}-npm-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-npm-

    - name: Install Python dependencies
      env:
        PIP_CACHE_DIR: ${{ steps.pip-cache.outputs.dir }}
      shell: bash
      run: |
        python -m pip install -U pip
        while read req_file; do
          python -m pip install --no-warn-script-location -r $req_file
        done <<< "${{ steps.prepare-python-requirements.outputs.files_list }}"

    - name: Install Node.js dependencies
      if: ${{ inputs.node-version }}
      shell: bash
      run: |
        npm install
